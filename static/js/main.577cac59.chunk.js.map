{"version":3,"sources":["components/Tabs/Tabs.jsx","App.jsx","index.jsx"],"names":["Tabs","_ref","tabsList","currentId","tabs","selectedTabId","onTabSelected","currentTab","find","tab","id","_jsxs","children","_jsx","className","map","classnames","onClick","href","concat","title","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"8NAMO,IAAMA,EAAO,SAAHC,GAIV,IARSC,EAAUC,EAKxBC,EAAIH,EAAJG,KACAC,EAAaJ,EAAbI,cACAC,EAAaL,EAAbK,cAEMC,GATkBJ,EASQE,GATlBH,EASYE,GARVI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOP,CAAS,KAAKD,EAAS,IAU9D,OACES,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGR,EAAKW,KAAI,SAAAN,GAAG,OACXI,cAAA,MAEEC,UAAWE,IAAW,CACpB,YAAaT,EAAWG,KAAOD,EAAIC,KAErC,UAAQ,MAAKE,SAEbC,cAAA,KACEI,QAAS,WACHV,EAAWG,KAAOD,EAAIC,IACxBJ,EAAcG,EAElB,EACAS,KAAI,IAAAC,OAAMV,EAAIC,IACd,UAAQ,UAASE,SAEhBH,EAAIW,SAfFX,EAAIC,GAiBN,QAKXG,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACxCL,EAAWc,YAIpB,ECvCajB,EAAO,CAClB,CAAEM,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,gBAG7BC,EAAM,WACjB,IAAAC,EAA0CC,mBAASpB,EAAK,GAAGM,IAAGe,EAAAC,YAAAH,EAAA,GAAvDlB,EAAaoB,EAAA,GAAEE,EAAgBF,EAAA,GAGtC,OACEd,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAO,OACCf,EACjBI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,CAAa,IAAEe,SAG3CP,cAACb,EAAI,CACHI,KAAMA,EACNC,cAAeA,EACfC,cAZgB,SAAAG,GAAG,OAAIkB,EAAiBlB,EAAIC,GAAI,MAgBxD,EC5BAkB,IAASC,OAAOhB,cAACS,EAAG,IAAKQ,SAASC,eAAe,Q","file":"static/js/main.577cac59.chunk.js","sourcesContent":["import classnames from 'classnames';\n\nfunction getTab(tabsList, currentId) {\n  return tabsList.find(tab => tab.id === currentId) || tabsList[0];\n}\n\nexport const Tabs = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const currentTab = getTab(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              key={tab.id}\n              className={classnames({\n                'is-active': currentTab.id === tab.id,\n              })}\n              data-cy=\"Tab\"\n            >\n              <a\n                onClick={() => {\n                  if (currentTab.id !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {currentTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const onTabSelected = tab => setSelectedTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs\n          .find(tab => tab.id === selectedTabId).title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}